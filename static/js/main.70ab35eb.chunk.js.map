{"version":3,"sources":["api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","findUserById","users","find","user","App","useState","setTitle","importedTodos","todos","setTodos","selectedUserId","setSelectedUserId","titleError","setTitleError","userError","setUserError","className","action","method","onSubmit","event","preventDefault","trim","currentTodos","todoList","reduce","prev","todo","type","placeholder","value","onChange","target","disabled","map","cn","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70ab35eb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport users from './api/users';\nimport importedTodos from './api/todos';\n\n// import usersFromServer from './api/users';\n// import todosFromServer from './api/todos';\n\ninterface Todo {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number\n}\n\ninterface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nfunction findUserById(id: number): User | null {\n  return users.find(user => user.id === id) || null;\n}\n\nfunction findBiggestTodoId(todoList: Todo[]): number {\n  return todoList.reduce((prev, todo) => (prev > todo.id ? prev : todo.id), 0);\n}\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(importedTodos);\n  const [selectedUserId, setSelectedUserId] = useState('0');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(event.target.value);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (selectedUserId === '0') {\n      setUserError(true);\n    }\n\n    if (!title.trim() || selectedUserId === '0') {\n      return;\n    }\n\n    setTitle('');\n    setSelectedUserId('0');\n\n    setTodos(currentTodos => [...currentTodos, {\n      id: findBiggestTodoId(todos) + 1,\n      title,\n      completed: false,\n      userId: +selectedUserId,\n    }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Add todo form\n      </h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              title=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              title=\"select user\"\n              value={selectedUserId}\n              onChange={handleUserSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {users.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {userError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        {todos.map(todo => (\n          <article\n            data-id={todo.id}\n            className={cn('TodoInfo', {\n              'TodoInfo--completed': todo.completed,\n            })}\n          >\n            <h2 className=\"TodoInfo__title\">\n              {todo.title}\n            </h2>\n\n            <a\n              className=\"UserInfo\"\n              href={`mailto:${findUserById(todo.userId)?.email}`}\n            >\n              {findUserById(todo.userId)?.name}\n            </a>\n          </article>\n        ))}\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}