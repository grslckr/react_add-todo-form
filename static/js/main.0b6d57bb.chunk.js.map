{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","users","find","className","href","TodoInfo","todo","cn","TodoList","todos","map","App","useState","setTitle","importedTodos","setTodos","selectedUserId","setSelectedUserId","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","currentTodos","todoList","reduce","prev","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b6d57bb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import users from '../../api/users';\nimport { User } from '../../types/User';\n\ntype Props = {\n  userId: number,\n};\n\nfunction findUserById(id: number): User | null {\n  return users.find(user => user.id === id) || null;\n}\n\nexport const UserInfo: React.FC<Props> = ({ userId }) => {\n  const user = findUserById(userId);\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    key={todo.id}\n    data-id={todo.id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo userId={todo.userId} />\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {\n      todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))\n    }\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\nimport users from './api/users';\nimport importedTodos from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nfunction findBiggestTodoId(todoList: Todo[]): number {\n  return todoList.reduce((prev, todo) => (prev > todo.id ? prev : todo.id), 0);\n}\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(importedTodos);\n  const [selectedUserId, setSelectedUserId] = useState('0');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(event.target.value);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (selectedUserId === '0') {\n      setUserError(true);\n    }\n\n    if (!title.trim() || selectedUserId === '0') {\n      return;\n    }\n\n    setTitle('');\n    setSelectedUserId('0');\n\n    setTodos(currentTodos => [...currentTodos, {\n      id: findBiggestTodoId(todos) + 1,\n      title,\n      completed: false,\n      userId: +selectedUserId,\n    }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Add todo form\n      </h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              title=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              title=\"select user\"\n              value={selectedUserId}\n              onChange={handleUserSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {users.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {userError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}